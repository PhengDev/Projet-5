security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        from_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: from_database
            logout:
                path: /logout
                target: /
            # activate different ways to authenticate
            form_login: 
                login_path: login
                check_path: login
            user_checker: App\Security\UserChecker
            switch_user: ~
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN}
         - { path: ^/profil, roles: [ROLE_USER, ROLE_ADMIN] }
         - { path: ^/edition, roles: [ROLE_USER, ROLE_ADMIN] }
         - { path: ^/panier, roles: [ROLE_USER, ROLE_ADMIN] }
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    
    encoders: 
        App\Entity\User:
            algorithm: bcrypt

